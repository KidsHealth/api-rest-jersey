-- MySQL Script generated by MySQL Workbench
-- vie 01 feb 2019 21:04:32 CET
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema kidshealth
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema kidshealth
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `kidshealth` DEFAULT CHARACTER SET utf8 ;
USE `kidshealth` ;

-- -----------------------------------------------------
-- Table `kidshealth`.`User`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `kidshealth`.`User` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(255) NOT NULL,
  `surname` VARCHAR(255) NOT NULL,
  `email` VARCHAR(255) NOT NULL,
  `password` VARCHAR(255) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `kidshealth`.`PatientResponsible`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `kidshealth`.`PatientResponsible` (
  `phone_number` VARCHAR(20) NULL,
  `address` VARCHAR(500) NULL,
  `User_id` INT NOT NULL,
  PRIMARY KEY (`User_id`),
  CONSTRAINT `fk_PatientResponsible_User1`
    FOREIGN KEY (`User_id`)
    REFERENCES `kidshealth`.`User` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `kidshealth`.`Doctor`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `kidshealth`.`Doctor` (
  `User_id` INT NOT NULL,
  PRIMARY KEY (`User_id`),
  CONSTRAINT `fk_Doctor_User1`
    FOREIGN KEY (`User_id`)
    REFERENCES `kidshealth`.`User` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `kidshealth`.`Patient`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `kidshealth`.`Patient` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(255) NOT NULL,
  `surname` VARCHAR(255) NOT NULL,
  `birthdate` DATE NOT NULL,
  `PatientResponsible_User_id` INT NOT NULL,
  `Doctor_User_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_Patient_PatientResponsible1_idx` (`PatientResponsible_User_id` ASC),
  INDEX `fk_Patient_Doctor1_idx` (`Doctor_User_id` ASC),
  CONSTRAINT `fk_Patient_PatientResponsible1`
    FOREIGN KEY (`PatientResponsible_User_id`)
    REFERENCES `kidshealth`.`PatientResponsible` (`User_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Patient_Doctor1`
    FOREIGN KEY (`Doctor_User_id`)
    REFERENCES `kidshealth`.`Doctor` (`User_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `kidshealth`.`Event`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `kidshealth`.`Event` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `title` VARCHAR(255) NOT NULL,
  `description` VARCHAR(2000) NULL,
  `venue` VARCHAR(500) NULL,
  `start_datetime` DATETIME NOT NULL,
  `end_datetime` DATETIME NOT NULL,
  `topic` VARCHAR(255) NULL,
  `Patient_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_Event_Patient_idx` (`Patient_id` ASC),
  CONSTRAINT `fk_Event_Patient`
    FOREIGN KEY (`Patient_id`)
    REFERENCES `kidshealth`.`Patient` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `kidshealth`.`Document`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `kidshealth`.`Document` (
  `path` VARCHAR(255) NOT NULL,
  `type` VARCHAR(255) NULL,
  `Event_id` INT NOT NULL,
  INDEX `fk_Document_Event1_idx` (`Event_id` ASC),
  PRIMARY KEY (`path`),
  CONSTRAINT `fk_Document_Event1`
    FOREIGN KEY (`Event_id`)
    REFERENCES `kidshealth`.`Event` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `kidshealth`.`DiseaseContraction`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `kidshealth`.`DiseaseContraction` (
  `Patient_id` INT NOT NULL,
  `id` INT NOT NULL,
  `disease_name` VARCHAR(500) NOT NULL,
  `disease_short_name` VARCHAR(255) NULL,
  `diagnosed_at` DATE NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_DiseaseContraction_Patient1_idx` (`Patient_id` ASC),
  CONSTRAINT `fk_DiseaseContraction_Patient1`
    FOREIGN KEY (`Patient_id`)
    REFERENCES `kidshealth`.`Patient` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `kidshealth`.`Message`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `kidshealth`.`Message` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `body` VARCHAR(5000) NOT NULL,
  `sended_at` DATETIME NOT NULL,
  `doctor_is_sender` TINYINT(1) NOT NULL,
  `Patient_id` INT NOT NULL,
  `Doctor_User_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_Message_Patient1_idx` (`Patient_id` ASC),
  INDEX `fk_Message_Doctor1_idx` (`Doctor_User_id` ASC),
  CONSTRAINT `fk_Message_Patient1`
    FOREIGN KEY (`Patient_id`)
    REFERENCES `kidshealth`.`Patient` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Message_Doctor1`
    FOREIGN KEY (`Doctor_User_id`)
    REFERENCES `kidshealth`.`Doctor` (`User_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = 'doctor_is_sender attribute: 1 if the sender is the doctor, 0 otherwise';


-- -----------------------------------------------------
-- Table `kidshealth`.`AppointmentRequest`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `kidshealth`.`AppointmentRequest` (
  `updated_at` DATETIME NOT NULL,
  `status` TINYINT NOT NULL,
  `Message_id` INT NOT NULL,
  `datetime_proposed` DATETIME NOT NULL,
  PRIMARY KEY (`Message_id`),
  CONSTRAINT `fk_AppointmentRequest_Message1`
    FOREIGN KEY (`Message_id`)
    REFERENCES `kidshealth`.`Message` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = 'status attribute:\n0 - Rejected\n1 - Pending\n2 - Accepted';


-- -----------------------------------------------------
-- Table `kidshealth`.`Medication`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `kidshealth`.`Medication` (
  `id` INT NOT NULL,
  `medicine_name` VARCHAR(255) NOT NULL,
  `medicine_commercial_name` VARCHAR(255) NULL,
  `timing` INT NOT NULL,
  `posology` DECIMAL(10,0) NOT NULL,
  `started_at` DATE NOT NULL,
  `ended_at` DATE NOT NULL,
  `DiseaseContraction_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_Medication_DiseaseContraction1_idx` (`DiseaseContraction_id` ASC),
  CONSTRAINT `fk_Medication_DiseaseContraction1`
    FOREIGN KEY (`DiseaseContraction_id`)
    REFERENCES `kidshealth`.`DiseaseContraction` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
